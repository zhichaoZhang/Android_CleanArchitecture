apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]

        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
        testApplicationId globalConfiguration["testApplicationId"]

        javaCompileOptions {
            annotationProcessorOptions {
                //定义room数据库导出表所在目录
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString()
                ]
            }
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
        // Due to Robolectric that modifies the manifest when running tests
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.dataTestDependencies
    implementation dataDependencies.retrofit
    implementation dataDependencies.retrofitRxjavaAdapter
    implementation dataDependencies.retrofitGsonConverter
    api dataDependencies.room
    annotationProcessor dataDependencies.roomCompiler
    implementation dataDependencies.roomRxjava2


    debugApi dataDependencies.stetho
    debugApi (dataDependencies.stethoOkHttp) {
        //移除stetho自带的OkHttp依赖
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    debugApi dataDependencies.retrofit

    testImplementation testDependencies.robolectric
    testImplementation testDependencies.room
    testImplementation testDependencies.mockito

    androidTestImplementation testDependencies.testRunner
    androidTestImplementation testDependencies.androidAnnotations
}
